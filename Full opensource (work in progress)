local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()



local Window = Rayfield:CreateWindow({
   Name = "Main toggles",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("Main functions")
local Section = Tab:CreateSection("Movement")
local Button = Tab:CreateButton({
   Name = "Teleport tool",
   Callback = function()
    mouse = game.Players.LocalPlayer:GetMouse()
tool = Instance.new("Tool")
tool.RequiresHandle = false
tool.Name = "Equip to Click TP"
tool.Activated:connect(function()
local pos = mouse.Hit+Vector3.new(0,2.5,0)
pos = CFrame.new(pos.X,pos.Y,pos.Z)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
end)
tool.Parent = game.Players.LocalPlayer.Backpack
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "fly UI (may not bypass anticheat)",
   Callback = function()
  
-- ‚úàÔ∏è Simple Mobile Fly Script (uses normal Roblox joystick for movement)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local root = character:WaitForChild("HumanoidRootPart")

local flying = false
local flySpeed = 50
local up = false
local down = false
local lastVelocity = Vector3.zero

-- üß± GUI
local gui = Instance.new("ScreenGui")
gui.Name = "FlightGUI"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

-- Helper: Make round buttons
local function makeRoundButton(text, pos)
	local b = Instance.new("TextButton")
	b.Size = UDim2.new(0.14, 0, 0.14, 0)
	b.Position = pos
	b.Text = text
	b.Font = Enum.Font.SourceSansBold
	b.TextScaled = true
	b.TextColor3 = Color3.new(1, 1, 1)
	b.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
	b.BackgroundTransparency = 0.35
	b.AutoButtonColor = true
	b.BorderSizePixel = 0
	b.Parent = gui

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(1, 0)
	corner.Parent = b
	return b
end

-- ‚¨ÜÔ∏è‚¨áÔ∏è Buttons on right
local upButton = makeRoundButton("‚Üë", UDim2.new(0.84, 0, 0.40, 0))
local downButton = makeRoundButton("‚Üì", UDim2.new(0.84, 0, 0.52, 0))

-- ‚úàÔ∏è Toggle Fly (center-top)
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0.28, 0, 0.08, 0)
toggleButton.Position = UDim2.new(0.36, 0, 0.55, 0)
toggleButton.Text = "‚úàÔ∏è Toggle Fly"
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextScaled = true
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.BackgroundColor3 = Color3.fromRGB(255, 170, 0)
toggleButton.BackgroundTransparency = 0.2
toggleButton.BorderSizePixel = 0
toggleButton.Parent = gui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0.3, 0)
corner.Parent = toggleButton

-- üéÆ Controls
upButton.MouseButton1Down:Connect(function() up = true end)
upButton.MouseButton1Up:Connect(function() up = false end)
downButton.MouseButton1Down:Connect(function() down = true end)
downButton.MouseButton1Up:Connect(function() down = false end)

toggleButton.MouseButton1Click:Connect(function()
	flying = not flying
	humanoid.PlatformStand = flying
	if not flying then
		-- Smooth landing
		task.spawn(function()
			for i = 1, 40 do
				if humanoid and root then
					root.Velocity = Vector3.new(0, math.max(-2, lastVelocity.Y - 1), 0)
				end
				task.wait(0.02)
			end
		end)
	end
end)

-- üåÄ Fly Movement Loop
game:GetService("RunService").RenderStepped:Connect(function()
	if flying and root then
		local move = humanoid.MoveDirection
		local vel = move * flySpeed
		if up then vel += Vector3.new(0, flySpeed, 0) end
		if down then vel += Vector3.new(0, -flySpeed, 0) end
		root.Velocity = vel
		lastVelocity = vel
	end
end)
   -- The function that takes place when the button is pressed
   end,
})
local Button = Tab:CreateButton({
   Name = "Aimlock and others",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/elxocasXD/Trip-Hub/refs/heads/main/Scripts/Precisionlock.lua"))()
   -- The function that takes place when the button is pressed
   end,
})

Rayfield:LoadConfiguration()
